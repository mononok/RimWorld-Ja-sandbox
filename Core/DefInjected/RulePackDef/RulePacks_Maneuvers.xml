<?xml version="1.0" encoding="UTF-8"?>
<LanguageData>
  
  <!-- EN:
    <li>damaged_inf->bite</li>
    <li>damaged_inf->chomp</li>
    <li>damaged_inf(p=0.5)->nip</li>
    <li>damaged_past->bit</li>
    <li>damaged_past->chomped</li>
    <li>damaged_past->nipped</li>
    <li>damaged_past->gnawed</li>
    <li>damaged_past(deflected!=True)->tore</li>
    <li>damaged_present->biting</li>
    <li>damaged_present->chomping</li>
    <li>damaged_present->nipped</li>
    <li>damaged_present->gnawing</li>
    <li>damaged_present(deflected!=True)->tearing</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->exposing the flesh underneath</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->exposing the machinery underneath</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving grisly tears in the skin</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->leaving grisly tears in the metal</li>
    <li>destroyed_past->tore off</li>
    <li>destroyed_past->ripped off</li>
    <li>destroyed_past->bit off</li>
    <li>destroyed_present->tearing off</li>
    <li>destroyed_present->ripping off</li>
    <li>destroyed_present->biting off</li>
    <li>destroyed_suffix->[to] pieces</li>
    <li>destroyed_suffix->[to] bits</li>
    <li>destroyed_suffix->[to] chunks</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] shreds</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] strips</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] messy strips</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] an unrecognizable mess</li>
  -->
  <Maneuver_Bite.rulePack.rulesStrings>
    <li>damaged_inf->噛む</li>
    <li>damaged_inf->ムシャムシャ噛む</li>
    <li>damaged_inf(p=0.5)->噛む</li>
    <li>damaged_past->噛んだ</li>
    <li>damaged_past->ムシャムシャ噛んだ</li>
    <li>damaged_past->噛んだ</li>
    <li>damaged_past->囓った</li>
    <li>damaged_past(deflected!=True)->引き裂いた</li>
    <li>damaged_present->噛んでいる</li>
    <li>damaged_present->ムシャムシャ噛んでいる</li>
    <li>damaged_present->噛んでいる</li>
    <li>damaged_present->囓っている</li>
    <li>damaged_present(deflected!=True)->引き裂いている</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->皮下組織が露わになったまま</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->内部機器をさらけ出して</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->容赦なく皮膚に傷を残したまま</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->容赦なく装甲に傷を残したまま</li>
    <li>destroyed_past->むさぼり喰った</li>
    <li>destroyed_past->かみ切った</li>
    <li>destroyed_past->引き裂いた</li>
    <li>destroyed_past->破壊した</li>
    <li>destroyed_present->むさぼり喰っている</li>
    <li>destroyed_present->かみ切っている</li>
    <li>destroyed_present->引き裂いている</li>
    <li>destroyed_present->破壊している</li>
    <li>destroyed_suffix->細長い破片[to]</li>
    <!-- How's his wife holding up? -->
    <li>destroyed_suffix->一片[to]</li>
    <li>destroyed_suffix->細長い一片[to]</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->汚らしい細長い片[to]</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->見分けられない散乱[to]</li>
  </Maneuver_Bite.rulePack.rulesStrings>
  
  <!-- EN:
    <li>r_logentry->[INITIATOR_definite] tried to kick [TOOL_label] in [RECIPIENT_definite]'s eyes, but [RECIPIENT_definite] dodged out of the way.</li>
    <li>r_logentry->[INITIATOR_definite] tried to kick [TOOL_label] in [RECIPIENT_definite]'s eyes, but [RECIPIENT_definite] blocked it.</li>
  -->
  <Maneuver_KickMaterialInEyes_MeleeDodge.rulePack.rulesStrings>
    <li>r_logentry->[INITIATOR_definite] tried to kick [TOOL_label] in [RECIPIENT_definite]'s eyes, but [RECIPIENT_definite] dodged out of the way.</li>
    <li>r_logentry->[INITIATOR_definite] tried to kick [TOOL_label] in [RECIPIENT_definite]'s eyes, but [RECIPIENT_definite] blocked it.</li>
  </Maneuver_KickMaterialInEyes_MeleeDodge.rulePack.rulesStrings>
  
  <!-- EN:
    <li>r_logentry->[INITIATOR_definite] kicked [TOOL_label] in [RECIPIENT_definite]'s eyes.</li>
    <li>r_logentry(p=0.2)->[INITIATOR_definite] kicked a spray of [TOOL_label] in [RECIPIENT_definite]'s eyes.</li>
  -->
  <Maneuver_KickMaterialInEyes_MeleeHit.rulePack.rulesStrings>
    <li>r_logentry->[INITIATOR_definite] kicked [TOOL_label] in [RECIPIENT_definite]'s eyes.</li>
    <li>r_logentry(p=0.2)->[INITIATOR_definite] kicked a spray of [TOOL_label] in [RECIPIENT_definite]'s eyes.</li>
  </Maneuver_KickMaterialInEyes_MeleeHit.rulePack.rulesStrings>
  
  <!-- EN:
    <li>r_logentry->[INITIATOR_definite] tried to kick [TOOL_label] in [RECIPIENT_definite]'s eyes, but missed.</li>
  -->
  <Maneuver_KickMaterialInEyes_MeleeMiss.rulePack.rulesStrings>
    <li>r_logentry->[INITIATOR_definite] tried to kick [TOOL_label] in [RECIPIENT_definite]'s eyes, but missed.</li>
  </Maneuver_KickMaterialInEyes_MeleeMiss.rulePack.rulesStrings>
  
  <!-- EN:
    <li>damaged_inf(p=2)->poke</li>
    <li>damaged_inf(p=2)->jab</li>
    <li>damaged_inf->prod</li>
    <li>damaged_inf->shove</li>
    <li>damaged_inf->stab</li>
    <li>damaged_past(p=2)->poked</li>
    <li>damaged_past(p=2)->jabbed</li>
    <li>damaged_past->prodded</li>
    <li>damaged_past->shoved</li>
    <li>damaged_past->stabbed</li>
    <li>damaged_present(p=2)->poking</li>
    <li>damaged_present(p=2)->jabbing</li>
    <li>damaged_present->prodding</li>
    <li>damaged_present->shoving</li>
    <li>damaged_present->stabbing</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving an enormous bruise</li>
    <li>flavortext_consequence->leaving the area visibly deformed</li>
    <li>flavortext_consequence->knocking [RECIPIENT_objective] off balance</li>
    <li>flavortext_consequence->knocking [RECIPIENT_objective] to the side</li>
    <li>destroyed_past->shattered</li>
    <li>destroyed_past->crushed</li>
    <li>destroyed_past->obliterated</li>
    <li>destroyed_past->annihilated</li>
    <li>destroyed_past->broke</li>
    <li>destroyed_present->shattering</li>
    <li>destroyed_present->crushing</li>
    <li>destroyed_present->obliterating</li>
    <li>destroyed_present->annihilating</li>
    <li>destroyed_present->breaking</li>
    <li>destroyed_suffix->[to] pieces</li>
    <li>destroyed_suffix->[to] bits</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] a fine mist</li>
    <li>destroyed_suffix->[to] fragments</li>
  -->
  <Maneuver_Poke.rulePack.rulesStrings>
    <li>damaged_inf(p=2)->突く</li>
    <li>damaged_inf(p=2)->かるく突く</li>
    <li>damaged_inf->つつく</li>
    <li>damaged_inf->強くつく</li>
    <li>damaged_inf->突き刺す</li>
    <li>damaged_past(p=2)->突いた</li>
    <li>damaged_past(p=2)->かるく突いた</li>
    <li>damaged_past->つついた</li>
    <li>damaged_past->強くついた</li>
    <li>damaged_past->突き刺した</li>
    <li>damaged_present(p=2)->突いている</li>
    <li>damaged_present(p=2)->かるく突いている</li>
    <li>damaged_present->つついている</li>
    <li>damaged_present->強くついている</li>
    <li>damaged_present->突き刺している</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->大きな打撲傷を負ったままで</li>
    <li>flavortext_consequence->形が変更したままで</li>
    <li>flavortext_consequence->[RECIPIENT_objective]殴ってバランスを崩させ</li>
    <li>flavortext_consequence->[RECIPIENT_objective]殴って横ずらしながら</li>
    <li>destroyed_past->打ち砕いた</li>
    <li>destroyed_past->砕いた</li>
    <li>destroyed_past->完全に破壊した</li>
    <li>destroyed_past->ダメにした</li>
    <li>destroyed_past->壊した</li>
    <li>destroyed_present->打ち砕いている</li>
    <li>destroyed_present->砕いている</li>
    <li>destroyed_present->完全に破壊している</li>
    <li>destroyed_present->ダメにしている</li>
    <li>destroyed_present->壊している</li>
    <li>destroyed_suffix->一片[to]</li>
    <li>destroyed_suffix->小片[to]</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->細かい霧状[to]</li>
    <li>destroyed_suffix->断片[to]</li>
  </Maneuver_Poke.rulePack.rulesStrings>
  
  <!-- EN:
    <li>woundname->wound</li>
    <li>woundname(p=0.3)->opening</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->and exposing the flesh underneath</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->and exposing the machinery underneath</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->and leaving a gory [woundname]</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] messy strips</li>
    <li>destroyed_suffix->[to] strips</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] messy pieces</li>
    <li>destroyed_suffix->[to] pieces</li>
    <li>destroyed_suffix->[to] fragments</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] a pile of gore</li>
  -->
  <Maneuver_Scratch.rulePack.rulesStrings>
    <li>woundname->創傷</li>
    <li>woundname(p=0.3)->傷口</li>
    <li>flavortext_situation(recipient_flesh!=Mechanoid)->[woundname]から血をしたたらせ</li>
    <li>flavortext_situation->[woundname]から血を流しながら</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->皮下組織が露わになったまま</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->内部機器をさらけ出して</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->血だらけの[woundname]には構わず</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->汚らしい細長い片[to]</li>
    <li>destroyed_suffix->細長い一片[to]</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->汚らしい細長い片[to]</li>
    <li>destroyed_suffix->断片[to]</li>
    <li>destroyed_suffix->破片[to]</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->血の塊[to]</li>
  </Maneuver_Scratch.rulePack.rulesStrings>
  
  <!-- EN:
    <li>damaged_inf(p=4)->scratch</li>
    <li>damaged_inf(deflected!=True)->lacerate</li>
    <li>damaged_inf(deflected!=True)->tear</li>
    <li>damaged_inf->cut</li>
    <li>damaged_past(p=4)->scratched</li>
    <li>damaged_past(deflected!=True)->lacerated</li>
    <li>damaged_past(deflected!=True)->tore</li>
    <li>damaged_past->cut</li>
    <li>damaged_present->scratching</li>
    <li>damaged_present(deflected!=True)->lacerating</li>
    <li>damaged_present(deflected!=True)->tearing</li>
    <li>damaged_present->cutting</li>
    <li>destroyed_past->mauled</li>
    <li>destroyed_past->lacerated</li>
    <li>destroyed_past->tore</li>
    <li>destroyed_past->shredded</li>
    <li>destroyed_past->ripped</li>
    <li>destroyed_present->mauling</li>
    <li>destroyed_present->lacerating</li>
    <li>destroyed_present->tearing</li>
    <li>destroyed_present->shredding</li>
    <li>destroyed_present->ripping</li>
  -->
  <Maneuver_Scratch_Damage.rulePack.rulesStrings>
    <li>damaged_inf(p=4)->引っ掻く</li>
    <li>damaged_inf(deflected!=True)->引き裂く</li>
    <li>damaged_inf(deflected!=True)->裂く</li>
    <li>damaged_inf->切る</li>
    <li>damaged_past(p=4)->引っ掻いた</li>
    <li>damaged_past(deflected!=True)->引き裂いた</li>
    <li>damaged_past(deflected!=True)->裂いた</li>
    <li>damaged_past->切った</li>
    <li>damaged_present->引っ掻いている</li>
    <li>damaged_present(deflected!=True)->引き裂いている</li>
    <li>damaged_present(deflected!=True)->裂いている</li>
    <li>damaged_present->切っている</li>
    <li>destroyed_past->打ち潰した</li>
    <li>destroyed_past->引き裂いた</li>
    <li>destroyed_past->裂いた</li>
    <li>destroyed_past->ずたずたに裂いた</li>
    <li>destroyed_past->引き裂いた</li>
    <li>destroyed_present->打ち潰している</li>
    <li>destroyed_present->引き裂いている</li>
    <li>destroyed_present->裂いている</li>
    <li>destroyed_present->ズタズタに裂いている</li>
    <li>destroyed_present->引き裂いている</li>
  </Maneuver_Scratch_Damage.rulePack.rulesStrings>
  
  <!-- EN:
    <li>damaged_inf(p=4)->slash</li>
    <li>damaged_inf->cut</li>
    <li>damaged_inf->chop</li>
    <li>damaged_inf->hack</li>
    <li>damaged_inf->slice</li>
    <li>damaged_inf(deflected!=True)->gash</li>
    <li>damaged_past(p=4)->slashed</li>
    <li>damaged_past->cut</li>
    <li>damaged_past->chopped</li>
    <li>damaged_past->hacked</li>
    <li>damaged_past->sliced</li>
    <li>damaged_past(deflected!=True)->gashed</li>
    <li>damaged_present->slashing</li>
    <li>damaged_present->cutting</li>
    <li>damaged_present->slicing</li>
    <li>damaged_present(deflected!=True)->gashing</li>
    <li>damaged_present(deflected!=True)->tearing</li>
    <li>damaged_present(deflected!=True)->lacerating</li>
    <li>woundname->wound</li>
    <li>woundname(p=0.3)->opening</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->exposing the flesh underneath</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->exposing the machinery underneath</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a gory [woundname]</li>
    <li>destroyed_past->bisected</li>
    <li>destroyed_past->divided</li>
    <li>destroyed_past->halved</li>
    <li>destroyed_past->separated</li>
    <li>destroyed_past->split</li>
    <li>destroyed_present->bisecting</li>
    <li>destroyed_present->dividing</li>
    <li>destroyed_present->halving</li>
    <li>destroyed_present->separating</li>
    <li>destroyed_present->splitting</li>
    <li>destroyed_suffix->into neat pieces</li>
    <li>destroyed_suffix->cleanly</li>
    <li>destroyed_suffix(target_part_destroyed_count==1)->exposing its inner workings</li>
    <li>destroyed_suffix(target_part_destroyed_count==1)->slicing it in twain</li>
  -->
  <Maneuver_Slash.rulePack.rulesStrings>
    <li>damaged_inf(p=4)->サッと斬る</li>
    <li>damaged_inf->切る</li>
    <li>damaged_inf->切り刻む</li>
    <li>damaged_inf->叩き切る</li>
    <li>damaged_inf->薄く切り取る</li>
    <li>damaged_inf(deflected!=True)->深く切る</li>
    <li>damaged_past(p=4)->サッと斬った</li>
    <li>damaged_past->切った</li>
    <li>damaged_past->切り刻んだ</li>
    <li>damaged_past->叩き切った</li>
    <li>damaged_past->薄く切った</li>
    <li>damaged_past(deflected!=True)->深く切った</li>
    <li>damaged_present->サッと斬っている</li>
    <li>damaged_present->切っている</li>
    <li>damaged_present->薄く切っている</li>
    <li>damaged_present(deflected!=True)->->深く切っている</li>
    <li>damaged_present(deflected!=True)->->引っ掻いている</li>
    <li>damaged_present(deflected!=True)->->引き裂いている</li>
    <li>woundname->傷口</li>
    <li>woundname(p=0.3)->裂け目</li>
    <li>flavortext_situation(recipient_flesh!=Mechanoid)->[woundname]から血を滴らせながら</li>
    <li>flavortext_situation->[woundname]から血を流して</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->皮下組織が露わになったまま</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->内部機器をさらけ出して</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->血だらけの[woundname]には構わず</li>
    <li>destroyed_past->真っ二つにした</li>
    <li>destroyed_past->二分した</li>
    <li>destroyed_past->半分になった</li>
    <li>destroyed_past->離れた</li>
    <li>destroyed_past->分裂した</li>
    <li>destroyed_present->真っ二つになる</li>
    <li>destroyed_present->二分する</li>
    <li>destroyed_present->半分になる</li>
    <li>destroyed_present->離れる</li>
    <li>destroyed_present->分裂する</li>
    <li>destroyed_suffix->滑らかな小片に</li>
    <li>destroyed_suffix->手際よく</li>
    <li>destroyed_suffix(target_part_destroyed_count==1)->内部活動をさらけだしつつ</li>
    <li>destroyed_suffix(target_part_destroyed_count==1)->二つに切り分ける</li>
  </Maneuver_Slash.rulePack.rulesStrings>
  
  <!-- EN:
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving an enormous bruise</li>
    <li>flavortext_consequence->leaving the area visibly deformed</li>
    <li>flavortext_consequence->knocking [RECIPIENT_objective] off balance</li>
    <li>flavortext_consequence->knocking [RECIPIENT_objective] to the side</li>
    <li>destroyed_suffix->[to] pieces</li>
    <li>destroyed_suffix->[to] bits</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] a fine mist</li>
    <li>destroyed_suffix->[to] fragments</li>
  -->
  <Maneuver_Smash.rulePack.rulesStrings>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->大きな打撲傷を負ったままで</li>
    <li>flavortext_consequence->形が変更したままで</li>
    <li>flavortext_consequence->[RECIPIENT_objective]殴ってバランスを崩させ</li>
    <li>flavortext_consequence->[RECIPIENT_objective]殴って横ずらしながら</li>
    <li>destroyed_suffix->一片[to]</li>
    <li>destroyed_suffix->小片[to]</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->細かい霧状[to]</li>
    <li>destroyed_suffix->断片[to]</li>
  </Maneuver_Smash.rulePack.rulesStrings>
  
  <!-- EN:
    <li>damaged_inf->hit</li>
    <li>damaged_inf->smash</li>
    <li>damaged_inf->bash</li>
    <li>damaged_inf->slam</li>
    <li>damaged_inf->strike</li>
    <li>damaged_inf->beat</li>
    <li>damaged_past->hit</li>
    <li>damaged_past->smashed</li>
    <li>damaged_past->bashed</li>
    <li>damaged_past->slammed</li>
    <li>damaged_past->struck</li>
    <li>damaged_past->beat</li>
    <li>damaged_present->smashing</li>
    <li>damaged_present->bashing</li>
    <li>damaged_present(deflected!=True)->bruising</li>
    <li>destroyed_past->shattered</li>
    <li>destroyed_past->crushed</li>
    <li>destroyed_past->broke</li>
    <li>destroyed_present->shattering</li>
    <li>destroyed_present->crushing</li>
    <li>destroyed_present->breaking</li>
  -->
  <Maneuver_Smash_Damage.rulePack.rulesStrings>
    <li>damaged_inf(p=4)->強打する</li>
    <li>damaged_inf->殴る</li>
    <li>damaged_inf->叩きのめす</li>
    <li>damaged_inf->強く打つ</li>
    <li>damaged_inf->打つ</li>
    <li>damaged_past(p=4)->強打した</li>
    <li>damaged_past->殴った</li>
    <li>damaged_past->叩きのめした</li>
    <li>damaged_past->強く打った</li>
    <li>damaged_past->打った</li>
    <li>damaged_present->強打している</li>
    <li>damaged_present->殴っている</li>
    <li>damaged_present->叩きのめしている</li>
    <li>damaged_present(deflected!=True)->へこましている</li>
    <li>damaged_present(deflected!=True)->裂いている</li>
    <li>destroyed_past->打ち砕いた</li>
    <li>destroyed_past->砕いた</li>
    <li>destroyed_past->跡形もなく破壊した</li>
    <li>destroyed_past->ダメにした</li>
    <li>destroyed_past->破壊した</li>
    <li>destroyed_present->打ち砕いている</li>
    <li>destroyed_present->砕いている</li>
    <li>destroyed_present->完全に破壊している</li>
    <li>destroyed_present->ダメにしている</li>
    <li>destroyed_present->破壊している</li>
  </Maneuver_Smash_Damage.rulePack.rulesStrings>
  
  <!-- EN:
    <li>damaged_inf(p=4)->stab</li>
    <li>damaged_inf->jab</li>
    <li>damaged_inf(deflected!=True)->pierce</li>
    <li>damaged_inf(deflected!=True)->puncture</li>
    <li>damaged_inf(deflected!=True)->skewer</li>
    <li>damaged_past(p=4)->stabbed</li>
    <li>damaged_past->jabbed</li>
    <li>damaged_past(deflected!=True)->pierced</li>
    <li>damaged_past(deflected!=True)->punctured</li>
    <li>damaged_past(deflected!=True)->skewered</li>
    <li>damaged_present(deflected!=True)->piercing</li>
    <li>damaged_present(deflected!=True)->puncturing</li>
    <li>damaged_present(deflected!=True)->penetrating</li>
    <li>damaged_present(deflected!=True)->skewering</li>
    <li>woundname->hole</li>
    <li>woundname->wound</li>
    <li>woundname->crevice</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a bloody [woundname]</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a torn [woundname]</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a bleeding [woundname]</li>
    <li>destroyed_past->impaled</li>
    <li>destroyed_past->perforated</li>
    <li>destroyed_past->skewered</li>
    <li>destroyed_present->impaling</li>
    <li>destroyed_present->perforating</li>
    <li>destroyed_present->skewering</li>
    <li>destroyed_suffix->straight through</li>
    <li>destroyed_suffix->leaving a clean hole</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid,target_part_destroyed_count==1)->leaving it leaking gory fluids</li>
    <li>destroyed_suffix(target_part_destroyed_count==1)->leaving it leaking unrecognizable fluids</li>
  -->
  <Maneuver_Stab.rulePack.rulesStrings>
    <li>damaged_inf(p=4)->突き刺す</li>
    <li>damaged_inf->かるく突く</li>
    <li>damaged_inf(deflected!=True)->刺し通す</li>
    <li>damaged_inf(deflected!=True)->刺す</li>
    <li>damaged_inf(deflected!=True)->串刺しにする</li>
    <li>damaged_past(p=4)->突き刺した</li>
    <li>damaged_past->かるく突いた</li>
    <li>damaged_past(deflected!=True)->刺し通した</li>
    <li>damaged_past(deflected!=True)->刺した</li>
    <li>damaged_past(deflected!=True)->串刺しにした</li>
    <li>damaged_present(deflected!=True)->刺し通している</li>
    <li>damaged_present(deflected!=True)->刺している</li>
    <li>damaged_present(deflected!=True)->穿っている</li>
    <li>damaged_present(deflected!=True)->串刺しにしている</li>
    <li>woundname->穴</li>
    <li>woundname->創傷</li>
    <li>woundname->裂け目</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->[woundname]の血をそのままにして</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->[woundname]の液体をそのままにして</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->[woundname]の出血を放置して</li>
    <li>destroyed_past->差し貫いた</li>
    <li>destroyed_past->貫通した</li>
    <li>destroyed_past->串刺しにした</li>
    <li>destroyed_present->差し貫く</li>
    <li>destroyed_present->貫通する</li>
    <li>destroyed_present->串刺しにする</li>
    <li>destroyed_suffix->真っ直ぐに貫く</li>
    <li>destroyed_suffix->穿孔のまま</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid,target_part_destroyed_count==1)->血が噴き出すのも気にせず</li>
    <li>destroyed_suffix(target_part_destroyed_count==1)->潤滑油なのか判らない液体が漏れたまま</li>
  </Maneuver_Stab.rulePack.rulesStrings>
  
</LanguageData>